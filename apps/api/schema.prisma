generator client {
    provider  = "prisma-client-py"
    interface = "asyncio"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum annotation_type {
    url_citation
}

enum image_detail {
    auto
    low
    high
}

enum message_content_type {
    text
    image
    file
    tool_use
    tool_result
}

enum message_role {
    developer
    system
    assistant
    user
    tool
}

enum widget_type {
    text
    image
    image_url
    chart
}

model threads {
    id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    external_id String?    @unique
    created_at  DateTime   @default(now())
    updated_at  DateTime   @default(now()) @updatedAt
    metadata    Json       @default("{}") @db.JsonB
    messages    messages[]

    @@map("threads")
}

model messages {
    id          String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    thread      threads            @relation(fields: [thread_id], references: [id], onDelete: Cascade)
    thread_id   String             @db.Uuid
    role        message_role       @default(user)
    name        String?
    tool_use_id String?
    refusal     String?
    contents    message_contents[]
    agent_class String
    created_at  DateTime           @default(now())
    updated_at  DateTime           @default(now()) @updatedAt

    @@map("messages")
}

model message_contents {
    id          String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    message     messages             @relation(fields: [message_id], references: [id], onDelete: Cascade)
    message_id  String               @db.Uuid
    type        message_content_type @default(text)
    image_url   String?
    file_data   Bytes?
    file_name   String?
    text        String?
    widget_type widget_type?
    tool_use_id String?
    tool_name   String?
    tool_input  Json?                @db.JsonB
    tool_output String?
    created_at  DateTime             @default(now())
    updated_at  DateTime             @default(now()) @updatedAt

    @@map("message_contents")
}

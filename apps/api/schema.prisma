datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider  = "prisma-client-py"
    interface = "sync"
}

enum MessageContentType {
    text
    image
    pdf
    tool_use
    tool_result
}

enum MessageRole {
    user
    assistant
    system
    developer
}

model Threads {
    id          String     @id @default(cuid())
    external_id String?    @unique
    created_at  DateTime   @default(now())
    updated_at  DateTime   @updatedAt
    metadata    String?
    messages    Messages[]

    @@map("threads")
}

model Messages {
    id          String            @id @default(cuid())
    thread      Threads           @relation(fields: [thread_id], references: [id], onDelete: Cascade)
    thread_id   String
    role        MessageRole       @default(user)
    contents    MessageContents[]
    agent_class String
    created_at  DateTime          @default(now())
    updated_at  DateTime          @updatedAt

    @@map("messages")
}

model MessageContents {
    id                String             @id @default(cuid())
    message           Messages           @relation(fields: [message_id], references: [id], onDelete: Cascade)
    message_id        String
    type              MessageContentType @default(text)
    tool_use_id       String?
    tool_use_is_error Boolean?
    tool_use_name     String?
    tool_use_input    Json?
    content           String?
    content_type      String?
    data              String?
    created_at        DateTime           @default(now())
    updated_at        DateTime           @updatedAt

    @@map("message_contents")
}

/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageContent } from './ImageContent';
import {
    ImageContentFromJSON,
    ImageContentFromJSONTyped,
    ImageContentToJSON,
    ImageContentToJSONTyped,
} from './ImageContent';
import type { PDFContent } from './PDFContent';
import {
    PDFContentFromJSON,
    PDFContentFromJSONTyped,
    PDFContentToJSON,
    PDFContentToJSONTyped,
} from './PDFContent';
import type { TextContent } from './TextContent';
import {
    TextContentFromJSON,
    TextContentFromJSONTyped,
    TextContentToJSON,
    TextContentToJSONTyped,
} from './TextContent';

/**
 * 
 * @export
 * @interface MessageCreateInputContentInner
 */
export interface MessageCreateInputContentInner {
    /**
     * 
     * @type {string}
     * @memberof MessageCreateInputContentInner
     */
    type?: MessageCreateInputContentInnerTypeEnum;
    /**
     * The base64 encoded PDF data, without any prefixes like `data:application/pdf;base64,`, for example: `iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==`
     * @type {string}
     * @memberof MessageCreateInputContentInner
     */
    content: string;
    /**
     * The content type of the image, must start with `image/`
     * @type {string}
     * @memberof MessageCreateInputContentInner
     */
    content_type?: MessageCreateInputContentInnerContentTypeEnum;
}


/**
 * @export
 */
export const MessageCreateInputContentInnerTypeEnum = {
    Text: 'text',
    Image: 'image',
    Pdf: 'pdf'
} as const;
export type MessageCreateInputContentInnerTypeEnum = typeof MessageCreateInputContentInnerTypeEnum[keyof typeof MessageCreateInputContentInnerTypeEnum];

/**
 * @export
 */
export const MessageCreateInputContentInnerContentTypeEnum = {
    ImageJpeg: 'image/jpeg',
    ImagePng: 'image/png',
    ImageGif: 'image/gif',
    ImageWebp: 'image/webp'
} as const;
export type MessageCreateInputContentInnerContentTypeEnum = typeof MessageCreateInputContentInnerContentTypeEnum[keyof typeof MessageCreateInputContentInnerContentTypeEnum];


/**
 * Check if a given object implements the MessageCreateInputContentInner interface.
 */
export function instanceOfMessageCreateInputContentInner(value: object): value is MessageCreateInputContentInner {
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function MessageCreateInputContentInnerFromJSON(json: any): MessageCreateInputContentInner {
    return MessageCreateInputContentInnerFromJSONTyped(json, false);
}

export function MessageCreateInputContentInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageCreateInputContentInner {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'content': json['content'],
        'content_type': json['content_type'] == null ? undefined : json['content_type'],
    };
}

export function MessageCreateInputContentInnerToJSON(json: any): MessageCreateInputContentInner {
    return MessageCreateInputContentInnerToJSONTyped(json, false);
}

export function MessageCreateInputContentInnerToJSONTyped(value?: MessageCreateInputContentInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'content': value['content'],
        'content_type': value['content_type'],
    };
}


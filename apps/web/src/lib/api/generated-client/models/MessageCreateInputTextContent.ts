/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface MessageCreateInputTextContent
 */
export interface MessageCreateInputTextContent {
  /**
   * @memberof MessageCreateInputTextContent
   * @type {string}
   */
  type?: MessageCreateInputTextContentTypeEnum;
  /**
   * @memberof MessageCreateInputTextContent
   * @type {string}
   */
  text: string;
}

/** @export */
export const MessageCreateInputTextContentTypeEnum = {
  Text: 'text'
} as const;
export type MessageCreateInputTextContentTypeEnum =
  (typeof MessageCreateInputTextContentTypeEnum)[keyof typeof MessageCreateInputTextContentTypeEnum];

/**
 * Check if a given object implements the MessageCreateInputTextContent
 * interface.
 */
export function instanceOfMessageCreateInputTextContent(
  value: object
): value is MessageCreateInputTextContent {
  if (!('text' in value) || value['text'] === undefined) return false;
  return true;
}

export function MessageCreateInputTextContentFromJSON(
  json: any
): MessageCreateInputTextContent {
  return MessageCreateInputTextContentFromJSONTyped(json, false);
}

export function MessageCreateInputTextContentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MessageCreateInputTextContent {
  if (json == null) {
    return json;
  }
  return {
    type: json['type'] == null ? undefined : json['type'],
    text: json['text']
  };
}

export function MessageCreateInputTextContentToJSON(
  json: any
): MessageCreateInputTextContent {
  return MessageCreateInputTextContentToJSONTyped(json, false);
}

export function MessageCreateInputTextContentToJSONTyped(
  value?: MessageCreateInputTextContent | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    type: value['type'],
    text: value['text']
  };
}

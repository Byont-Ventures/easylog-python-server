/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { Threads } from './threads';
import {
  ThreadsFromJSON,
  ThreadsFromJSONTyped,
  ThreadsToJSON,
  ThreadsToJSONTyped
} from './threads';
import type { MessageRole } from './message-role';
import {
  MessageRoleFromJSON,
  MessageRoleFromJSONTyped,
  MessageRoleToJSON,
  MessageRoleToJSONTyped
} from './message-role';
import type { MessageContents } from './message-contents';
import {
  MessageContentsFromJSON,
  MessageContentsFromJSONTyped,
  MessageContentsToJSON,
  MessageContentsToJSONTyped
} from './message-contents';

/**
 * Represents a messages record
 *
 * @export
 * @interface Messages
 */
export interface Messages {
  /**
   * @memberof Messages
   * @type {string}
   */
  id: string;
  /**
   * @memberof Messages
   * @type {Threads}
   */
  thread?: Threads | null;
  /**
   * @memberof Messages
   * @type {string}
   */
  thread_id: string;
  /**
   * @memberof Messages
   * @type {MessageRole}
   */
  role: MessageRole;
  /**
   * @memberof Messages
   * @type {string}
   */
  name?: string | null;
  /**
   * @memberof Messages
   * @type {string}
   */
  tool_use_id?: string | null;
  /**
   * @memberof Messages
   * @type {string}
   */
  refusal?: string | null;
  /**
   * @memberof Messages
   * @type {MessageContents[]}
   */
  contents?: Array<MessageContents> | null;
  /**
   * @memberof Messages
   * @type {string}
   */
  agent_class: string;
  /**
   * @memberof Messages
   * @type {Date}
   */
  created_at: Date;
  /**
   * @memberof Messages
   * @type {Date}
   */
  updated_at: Date;
}

/** Check if a given object implements the Messages interface. */
export function instanceOfMessages(value: object): value is Messages {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('thread_id' in value) || value['thread_id'] === undefined) return false;
  if (!('role' in value) || value['role'] === undefined) return false;
  if (!('agent_class' in value) || value['agent_class'] === undefined)
    return false;
  if (!('created_at' in value) || value['created_at'] === undefined)
    return false;
  if (!('updated_at' in value) || value['updated_at'] === undefined)
    return false;
  return true;
}

export function MessagesFromJSON(json: any): Messages {
  return MessagesFromJSONTyped(json, false);
}

export function MessagesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Messages {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    thread:
      json['thread'] == null ? undefined : ThreadsFromJSON(json['thread']),
    thread_id: json['thread_id'],
    role: MessageRoleFromJSON(json['role']),
    name: json['name'] == null ? undefined : json['name'],
    tool_use_id: json['tool_use_id'] == null ? undefined : json['tool_use_id'],
    refusal: json['refusal'] == null ? undefined : json['refusal'],
    contents:
      json['contents'] == null
        ? undefined
        : (json['contents'] as Array<any>).map(MessageContentsFromJSON),
    agent_class: json['agent_class'],
    created_at: new Date(json['created_at']),
    updated_at: new Date(json['updated_at'])
  };
}

export function MessagesToJSON(json: any): Messages {
  return MessagesToJSONTyped(json, false);
}

export function MessagesToJSONTyped(
  value?: Messages | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    thread: ThreadsToJSON(value['thread']),
    thread_id: value['thread_id'],
    role: MessageRoleToJSON(value['role']),
    name: value['name'],
    tool_use_id: value['tool_use_id'],
    refusal: value['refusal'],
    contents:
      value['contents'] == null
        ? undefined
        : (value['contents'] as Array<any>).map(MessageContentsToJSON),
    agent_class: value['agent_class'],
    created_at: value['created_at'].toISOString(),
    updated_at: value['updated_at'].toISOString()
  };
}

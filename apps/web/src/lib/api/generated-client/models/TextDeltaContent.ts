/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface TextDeltaContent
 */
export interface TextDeltaContent {
  /**
   * The ID of the content.
   *
   * @memberof TextDeltaContent
   * @type {string}
   */
  id: string;
  /**
   * @memberof TextDeltaContent
   * @type {string}
   */
  type?: TextDeltaContentTypeEnum;
  /**
   * The delta of the content.
   *
   * @memberof TextDeltaContent
   * @type {string}
   */
  delta: string;
}

/** @export */
export const TextDeltaContentTypeEnum = {
  TextDelta: 'text_delta'
} as const;
export type TextDeltaContentTypeEnum =
  (typeof TextDeltaContentTypeEnum)[keyof typeof TextDeltaContentTypeEnum];

/** Check if a given object implements the TextDeltaContent interface. */
export function instanceOfTextDeltaContent(
  value: object
): value is TextDeltaContent {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('delta' in value) || value['delta'] === undefined) return false;
  return true;
}

export function TextDeltaContentFromJSON(json: any): TextDeltaContent {
  return TextDeltaContentFromJSONTyped(json, false);
}

export function TextDeltaContentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): TextDeltaContent {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    type: json['type'] == null ? undefined : json['type'],
    delta: json['delta']
  };
}

export function TextDeltaContentToJSON(json: any): TextDeltaContent {
  return TextDeltaContentToJSONTyped(json, false);
}

export function TextDeltaContentToJSONTyped(
  value?: TextDeltaContent | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    type: value['type'],
    delta: value['delta']
  };
}

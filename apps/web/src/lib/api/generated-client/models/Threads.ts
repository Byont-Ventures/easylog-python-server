/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Messages } from './Messages';
import {
    MessagesFromJSON,
    MessagesFromJSONTyped,
    MessagesToJSON,
    MessagesToJSONTyped,
} from './Messages';

/**
 * Represents a Threads record
 * @export
 * @interface Threads
 */
export interface Threads {
    /**
     * 
     * @type {string}
     * @memberof Threads
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Threads
     */
    externalId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Threads
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Threads
     */
    updatedAt: Date;
    /**
     * 
     * @type {Array<Messages>}
     * @memberof Threads
     */
    messages?: Array<Messages> | null;
}

/**
 * Check if a given object implements the Threads interface.
 */
export function instanceOfThreads(value: object): value is Threads {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ThreadsFromJSON(json: any): Threads {
    return ThreadsFromJSONTyped(json, false);
}

export function ThreadsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Threads {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'externalId': json['external_id'] == null ? undefined : json['external_id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(MessagesFromJSON)),
    };
}

export function ThreadsToJSON(json: any): Threads {
    return ThreadsToJSONTyped(json, false);
}

export function ThreadsToJSONTyped(value?: Threads | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'external_id': value['externalId'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(MessagesToJSON)),
    };
}


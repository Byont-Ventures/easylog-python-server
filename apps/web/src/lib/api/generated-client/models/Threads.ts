/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { Messages } from './Messages';
import {
  MessagesFromJSON,
  MessagesFromJSONTyped,
  MessagesToJSON,
  MessagesToJSONTyped
} from './Messages';

/**
 * Represents a threads record
 *
 * @export
 * @interface Threads
 */
export interface Threads {
  /**
   * @memberof Threads
   * @type {string}
   */
  id: string;
  /**
   * @memberof Threads
   * @type {string}
   */
  external_id?: string | null;
  /**
   * @memberof Threads
   * @type {Date}
   */
  created_at: Date;
  /**
   * @memberof Threads
   * @type {Date}
   */
  updated_at: Date;
  /**
   * @memberof Threads
   * @type {string}
   */
  metadata?: string | null;
  /**
   * @memberof Threads
   * @type {Messages[]}
   */
  messages?: Array<Messages> | null;
}

/** Check if a given object implements the Threads interface. */
export function instanceOfThreads(value: object): value is Threads {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('created_at' in value) || value['created_at'] === undefined)
    return false;
  if (!('updated_at' in value) || value['updated_at'] === undefined)
    return false;
  return true;
}

export function ThreadsFromJSON(json: any): Threads {
  return ThreadsFromJSONTyped(json, false);
}

export function ThreadsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Threads {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    external_id: json['external_id'] == null ? undefined : json['external_id'],
    created_at: new Date(json['created_at']),
    updated_at: new Date(json['updated_at']),
    metadata: json['metadata'] == null ? undefined : json['metadata'],
    messages:
      json['messages'] == null
        ? undefined
        : (json['messages'] as Array<any>).map(MessagesFromJSON)
  };
}

export function ThreadsToJSON(json: any): Threads {
  return ThreadsToJSONTyped(json, false);
}

export function ThreadsToJSONTyped(
  value?: Threads | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    external_id: value['external_id'],
    created_at: value['created_at'].toISOString(),
    updated_at: value['updated_at'].toISOString(),
    metadata: value['metadata'],
    messages:
      value['messages'] == null
        ? undefined
        : (value['messages'] as Array<any>).map(MessagesToJSON)
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageContentType } from './message-content-type';
import {
  MessageContentTypeFromJSON,
  MessageContentTypeFromJSONTyped,
  MessageContentTypeToJSON,
  MessageContentTypeToJSONTyped
} from './message-content-type';
import type { Messages } from './messages';
import {
  MessagesFromJSON,
  MessagesFromJSONTyped,
  MessagesToJSON,
  MessagesToJSONTyped
} from './messages';
import type { WidgetType } from './widget-type';
import {
  WidgetTypeFromJSON,
  WidgetTypeFromJSONTyped,
  WidgetTypeToJSON,
  WidgetTypeToJSONTyped
} from './widget-type';

/**
 * Represents a message_contents record
 *
 * @export
 * @interface MessageContents
 */
export interface MessageContents {
  /**
   * @memberof MessageContents
   * @type {string}
   */
  id: string;
  /**
   * @memberof MessageContents
   * @type {Messages}
   */
  message?: Messages | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  message_id: string;
  /**
   * @memberof MessageContents
   * @type {MessageContentType}
   */
  type: MessageContentType;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  image_url?: string | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  file_data?: string | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  file_name?: string | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  text?: string | null;
  /**
   * @memberof MessageContents
   * @type {WidgetType}
   */
  widget_type?: WidgetType | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  tool_use_id?: string | null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  tool_name?: string | null;
  /**
   * @memberof MessageContents
   * @type
   */
  tool_input?: null;
  /**
   * @memberof MessageContents
   * @type {string}
   */
  tool_output?: string | null;
  /**
   * @memberof MessageContents
   * @type {Date}
   */
  created_at: Date;
  /**
   * @memberof MessageContents
   * @type {Date}
   */
  updated_at: Date;
}

/** Check if a given object implements the MessageContents interface. */
export function instanceOfMessageContents(
  value: object
): value is MessageContents {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('message_id' in value) || value['message_id'] === undefined)
    return false;
  if (!('type' in value) || value['type'] === undefined) return false;
  if (!('created_at' in value) || value['created_at'] === undefined)
    return false;
  if (!('updated_at' in value) || value['updated_at'] === undefined)
    return false;
  return true;
}

export function MessageContentsFromJSON(json: any): MessageContents {
  return MessageContentsFromJSONTyped(json, false);
}

export function MessageContentsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MessageContents {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    message:
      json['message'] == null ? undefined : MessagesFromJSON(json['message']),
    message_id: json['message_id'],
    type: MessageContentTypeFromJSON(json['type']),
    image_url: json['image_url'] == null ? undefined : json['image_url'],
    file_data: json['file_data'] == null ? undefined : json['file_data'],
    file_name: json['file_name'] == null ? undefined : json['file_name'],
    text: json['text'] == null ? undefined : json['text'],
    widget_type:
      json['widget_type'] == null
        ? undefined
        : WidgetTypeFromJSON(json['widget_type']),
    tool_use_id: json['tool_use_id'] == null ? undefined : json['tool_use_id'],
    tool_name: json['tool_name'] == null ? undefined : json['tool_name'],
    tool_input: null,
    tool_output: json['tool_output'] == null ? undefined : json['tool_output'],
    created_at: new Date(json['created_at']),
    updated_at: new Date(json['updated_at'])
  };
}

export function MessageContentsToJSON(json: any): MessageContents {
  return MessageContentsToJSONTyped(json, false);
}

export function MessageContentsToJSONTyped(
  value?: MessageContents | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    message: MessagesToJSON(value['message']),
    message_id: value['message_id'],
    type: MessageContentTypeToJSON(value['type']),
    image_url: value['image_url'],
    file_data: value['file_data'],
    file_name: value['file_name'],
    text: value['text'],
    widget_type: WidgetTypeToJSON(value['widget_type']),
    tool_use_id: value['tool_use_id'],
    tool_name: value['tool_name'],
    tool_input: null,
    tool_output: value['tool_output'],
    created_at: value['created_at'].toISOString(),
    updated_at: value['updated_at'].toISOString()
  };
}

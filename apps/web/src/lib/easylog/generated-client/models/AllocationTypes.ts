/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { AllocationTypesAllocationTypesInner } from './AllocationTypesAllocationTypesInner';
import {
  AllocationTypesAllocationTypesInnerFromJSON,
  AllocationTypesAllocationTypesInnerFromJSONTyped,
  AllocationTypesAllocationTypesInnerToJSON,
  AllocationTypesAllocationTypesInnerToJSONTyped
} from './AllocationTypesAllocationTypesInner';

/**
 * @export
 * @interface AllocationTypes
 */
export interface AllocationTypes {
  /**
   * @memberof AllocationTypes
   * @type {AllocationTypesAllocationTypesInner[]}
   */
  allocationTypes?: Array<AllocationTypesAllocationTypesInner> | null;
}

/** Check if a given object implements the AllocationTypes interface. */
export function instanceOfAllocationTypes(
  value: object
): value is AllocationTypes {
  return true;
}

export function AllocationTypesFromJSON(json: any): AllocationTypes {
  return AllocationTypesFromJSONTyped(json, false);
}

export function AllocationTypesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AllocationTypes {
  if (json == null) {
    return json;
  }
  return {
    allocationTypes:
      json['allocation_types'] == null
        ? undefined
        : (json['allocation_types'] as Array<any>).map(
            AllocationTypesAllocationTypesInnerFromJSON
          )
  };
}

export function AllocationTypesToJSON(json: any): AllocationTypes {
  return AllocationTypesToJSONTyped(json, false);
}

export function AllocationTypesToJSONTyped(
  value?: AllocationTypes | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    allocation_types:
      value['allocationTypes'] == null
        ? undefined
        : (value['allocationTypes'] as Array<any>).map(
            AllocationTypesAllocationTypesInnerToJSON
          )
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { AnnouncementCategoryResource } from './AnnouncementCategoryResource';
import {
  AnnouncementCategoryResourceFromJSON,
  AnnouncementCategoryResourceFromJSONTyped,
  AnnouncementCategoryResourceToJSON,
  AnnouncementCategoryResourceToJSONTyped
} from './AnnouncementCategoryResource';
import type { AnnouncementResourceSender } from './AnnouncementResourceSender';
import {
  AnnouncementResourceSenderFromJSON,
  AnnouncementResourceSenderFromJSONTyped,
  AnnouncementResourceSenderToJSON,
  AnnouncementResourceSenderToJSONTyped
} from './AnnouncementResourceSender';
import type { MediaResource } from './MediaResource';
import {
  MediaResourceFromJSON,
  MediaResourceFromJSONTyped,
  MediaResourceToJSON,
  MediaResourceToJSONTyped
} from './MediaResource';
import type { AnnouncementStatusResource } from './AnnouncementStatusResource';
import {
  AnnouncementStatusResourceFromJSON,
  AnnouncementStatusResourceFromJSONTyped,
  AnnouncementStatusResourceToJSON,
  AnnouncementStatusResourceToJSONTyped
} from './AnnouncementStatusResource';

/**
 * @export
 * @interface AnnouncementResource
 */
export interface AnnouncementResource {
  /**
   * @memberof AnnouncementResource
   * @type {number}
   */
  id?: number;
  /**
   * @memberof AnnouncementResource
   * @type {AnnouncementCategoryResource}
   */
  category?: AnnouncementCategoryResource;
  /**
   * @memberof AnnouncementResource
   * @type {string}
   */
  title?: string;
  /**
   * @memberof AnnouncementResource
   * @type {string}
   */
  content?: string;
  /**
   * @memberof AnnouncementResource
   * @type {boolean}
   */
  readReceipt?: boolean;
  /**
   * @memberof AnnouncementResource
   * @type {MediaResource[]}
   */
  attachments?: Array<MediaResource>;
  /**
   * @memberof AnnouncementResource
   * @type {AnnouncementResourceSender}
   */
  sender?: AnnouncementResourceSender;
  /**
   * @memberof AnnouncementResource
   * @type {AnnouncementStatusResource[]}
   */
  statuses?: Array<AnnouncementStatusResource>;
  /**
   * @memberof AnnouncementResource
   * @type {Date}
   */
  createdAt?: Date;
  /**
   * @memberof AnnouncementResource
   * @type {Date}
   */
  updatedAt?: Date;
}

/** Check if a given object implements the AnnouncementResource interface. */
export function instanceOfAnnouncementResource(
  value: object
): value is AnnouncementResource {
  return true;
}

export function AnnouncementResourceFromJSON(json: any): AnnouncementResource {
  return AnnouncementResourceFromJSONTyped(json, false);
}

export function AnnouncementResourceFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AnnouncementResource {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    category:
      json['category'] == null
        ? undefined
        : AnnouncementCategoryResourceFromJSON(json['category']),
    title: json['title'] == null ? undefined : json['title'],
    content: json['content'] == null ? undefined : json['content'],
    readReceipt:
      json['read_receipt'] == null ? undefined : json['read_receipt'],
    attachments:
      json['attachments'] == null
        ? undefined
        : (json['attachments'] as Array<any>).map(MediaResourceFromJSON),
    sender:
      json['sender'] == null
        ? undefined
        : AnnouncementResourceSenderFromJSON(json['sender']),
    statuses:
      json['statuses'] == null
        ? undefined
        : (json['statuses'] as Array<any>).map(
            AnnouncementStatusResourceFromJSON
          ),
    createdAt:
      json['created_at'] == null ? undefined : new Date(json['created_at']),
    updatedAt:
      json['updated_at'] == null ? undefined : new Date(json['updated_at'])
  };
}

export function AnnouncementResourceToJSON(json: any): AnnouncementResource {
  return AnnouncementResourceToJSONTyped(json, false);
}

export function AnnouncementResourceToJSONTyped(
  value?: AnnouncementResource | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    category: AnnouncementCategoryResourceToJSON(value['category']),
    title: value['title'],
    content: value['content'],
    read_receipt: value['readReceipt'],
    attachments:
      value['attachments'] == null
        ? undefined
        : (value['attachments'] as Array<any>).map(MediaResourceToJSON),
    sender: AnnouncementResourceSenderToJSON(value['sender']),
    statuses:
      value['statuses'] == null
        ? undefined
        : (value['statuses'] as Array<any>).map(
            AnnouncementStatusResourceToJSON
          ),
    created_at:
      value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    updated_at:
      value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString()
  };
}

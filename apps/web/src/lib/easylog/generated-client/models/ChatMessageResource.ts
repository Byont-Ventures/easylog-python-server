/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResource } from './UserResource';
import {
  UserResourceFromJSON,
  UserResourceFromJSONTyped,
  UserResourceToJSON,
  UserResourceToJSONTyped
} from './UserResource';

/**
 * @export
 * @interface ChatMessageResource
 */
export interface ChatMessageResource {
  /**
   * @memberof ChatMessageResource
   * @type {number}
   */
  id?: number;
  /**
   * @memberof ChatMessageResource
   * @type {number}
   */
  chatId?: number;
  /**
   * @memberof ChatMessageResource
   * @type {string}
   */
  text?: string;
  /**
   * @memberof ChatMessageResource
   * @type {UserResource}
   */
  user?: UserResource;
  /**
   * @memberof ChatMessageResource
   * @type {Date}
   */
  createdAt?: Date;
  /**
   * @memberof ChatMessageResource
   * @type {Date}
   */
  updatedAt?: Date;
}

/** Check if a given object implements the ChatMessageResource interface. */
export function instanceOfChatMessageResource(
  value: object
): value is ChatMessageResource {
  return true;
}

export function ChatMessageResourceFromJSON(json: any): ChatMessageResource {
  return ChatMessageResourceFromJSONTyped(json, false);
}

export function ChatMessageResourceFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChatMessageResource {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    chatId: json['chat_id'] == null ? undefined : json['chat_id'],
    text: json['text'] == null ? undefined : json['text'],
    user: json['user'] == null ? undefined : UserResourceFromJSON(json['user']),
    createdAt:
      json['created_at'] == null ? undefined : new Date(json['created_at']),
    updatedAt:
      json['updated_at'] == null ? undefined : new Date(json['updated_at'])
  };
}

export function ChatMessageResourceToJSON(json: any): ChatMessageResource {
  return ChatMessageResourceToJSONTyped(json, false);
}

export function ChatMessageResourceToJSONTyped(
  value?: ChatMessageResource | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    chat_id: value['chatId'],
    text: value['text'],
    user: UserResourceToJSON(value['user']),
    created_at:
      value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    updated_at:
      value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString()
  };
}

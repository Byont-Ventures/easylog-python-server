/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { DatasourceAllocationMultipleBodyResourcesInner } from './DatasourceAllocationMultipleBodyResourcesInner';
import {
  DatasourceAllocationMultipleBodyResourcesInnerFromJSON,
  DatasourceAllocationMultipleBodyResourcesInnerFromJSONTyped,
  DatasourceAllocationMultipleBodyResourcesInnerToJSON,
  DatasourceAllocationMultipleBodyResourcesInnerToJSONTyped
} from './DatasourceAllocationMultipleBodyResourcesInner';

/**
 * @export
 * @interface DatasourceAllocationMultipleBody
 */
export interface DatasourceAllocationMultipleBody {
  /**
   * @memberof DatasourceAllocationMultipleBody
   * @type {number}
   */
  projectId: number;
  /**
   * @memberof DatasourceAllocationMultipleBody
   * @type {string}
   */
  group?: string | null;
  /**
   * @memberof DatasourceAllocationMultipleBody
   * @type {DatasourceAllocationMultipleBodyResourcesInner[]}
   */
  resources: Array<DatasourceAllocationMultipleBodyResourcesInner>;
}

/**
 * Check if a given object implements the DatasourceAllocationMultipleBody
 * interface.
 */
export function instanceOfDatasourceAllocationMultipleBody(
  value: object
): value is DatasourceAllocationMultipleBody {
  if (!('projectId' in value) || value['projectId'] === undefined) return false;
  if (!('resources' in value) || value['resources'] === undefined) return false;
  return true;
}

export function DatasourceAllocationMultipleBodyFromJSON(
  json: any
): DatasourceAllocationMultipleBody {
  return DatasourceAllocationMultipleBodyFromJSONTyped(json, false);
}

export function DatasourceAllocationMultipleBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DatasourceAllocationMultipleBody {
  if (json == null) {
    return json;
  }
  return {
    projectId: json['project_id'],
    group: json['group'] == null ? undefined : json['group'],
    resources: (json['resources'] as Array<any>).map(
      DatasourceAllocationMultipleBodyResourcesInnerFromJSON
    )
  };
}

export function DatasourceAllocationMultipleBodyToJSON(
  json: any
): DatasourceAllocationMultipleBody {
  return DatasourceAllocationMultipleBodyToJSONTyped(json, false);
}

export function DatasourceAllocationMultipleBodyToJSONTyped(
  value?: DatasourceAllocationMultipleBody | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    project_id: value['projectId'],
    group: value['group'],
    resources: (value['resources'] as Array<any>).map(
      DatasourceAllocationMultipleBodyResourcesInnerToJSON
    )
  };
}

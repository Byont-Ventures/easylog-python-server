/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { AdditionalAllocationData } from './AdditionalAllocationData';
import {
  AdditionalAllocationDataFromJSON,
  AdditionalAllocationDataFromJSONTyped,
  AdditionalAllocationDataToJSON,
  AdditionalAllocationDataToJSONTyped
} from './AdditionalAllocationData';

/**
 * @export
 * @interface DatasourceAllocationMultipleUpdateBodyAllocationsInner
 */
export interface DatasourceAllocationMultipleUpdateBodyAllocationsInner {
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {number}
   */
  id: number;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {Date}
   */
  start: Date;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {Date}
   */
  end: Date;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {string}
   */
  type?: string | null;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {string}
   */
  comment?: string | null;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {number}
   */
  parentId?: number | null;
  /**
   * @memberof DatasourceAllocationMultipleUpdateBodyAllocationsInner
   * @type {AdditionalAllocationData[]}
   */
  fields?: Array<AdditionalAllocationData> | null;
}

/**
 * Check if a given object implements the
 * DatasourceAllocationMultipleUpdateBodyAllocationsInner interface.
 */
export function instanceOfDatasourceAllocationMultipleUpdateBodyAllocationsInner(
  value: object
): value is DatasourceAllocationMultipleUpdateBodyAllocationsInner {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('start' in value) || value['start'] === undefined) return false;
  if (!('end' in value) || value['end'] === undefined) return false;
  return true;
}

export function DatasourceAllocationMultipleUpdateBodyAllocationsInnerFromJSON(
  json: any
): DatasourceAllocationMultipleUpdateBodyAllocationsInner {
  return DatasourceAllocationMultipleUpdateBodyAllocationsInnerFromJSONTyped(
    json,
    false
  );
}

export function DatasourceAllocationMultipleUpdateBodyAllocationsInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DatasourceAllocationMultipleUpdateBodyAllocationsInner {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    start: new Date(json['start']),
    end: new Date(json['end']),
    type: json['type'] == null ? undefined : json['type'],
    comment: json['comment'] == null ? undefined : json['comment'],
    parentId: json['parent_id'] == null ? undefined : json['parent_id'],
    fields:
      json['fields'] == null
        ? undefined
        : (json['fields'] as Array<any>).map(AdditionalAllocationDataFromJSON)
  };
}

export function DatasourceAllocationMultipleUpdateBodyAllocationsInnerToJSON(
  json: any
): DatasourceAllocationMultipleUpdateBodyAllocationsInner {
  return DatasourceAllocationMultipleUpdateBodyAllocationsInnerToJSONTyped(
    json,
    false
  );
}

export function DatasourceAllocationMultipleUpdateBodyAllocationsInnerToJSONTyped(
  value?: DatasourceAllocationMultipleUpdateBodyAllocationsInner | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    start: value['start'].toISOString(),
    end: value['end'].toISOString(),
    type: value['type'],
    comment: value['comment'],
    parent_id: value['parentId'],
    fields:
      value['fields'] == null
        ? undefined
        : (value['fields'] as Array<any>).map(AdditionalAllocationDataToJSON)
  };
}

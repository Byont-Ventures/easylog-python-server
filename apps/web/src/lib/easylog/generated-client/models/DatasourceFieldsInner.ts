/* tslint:disable */
/* eslint-disable */
/**
 * Easylog No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface DatasourceFieldsInner
 */
export interface DatasourceFieldsInner {
  /**
   * @memberof DatasourceFieldsInner
   * @type {string}
   */
  name?: string;
  /**
   * @memberof DatasourceFieldsInner
   * @type {string}
   */
  type?: DatasourceFieldsInnerTypeEnum;
  /**
   * @memberof DatasourceFieldsInner
   * @type {string}
   */
  label?: string;
}

/** @export */
export const DatasourceFieldsInnerTypeEnum = {
  Checkbox: 'checkbox'
} as const;
export type DatasourceFieldsInnerTypeEnum =
  (typeof DatasourceFieldsInnerTypeEnum)[keyof typeof DatasourceFieldsInnerTypeEnum];

/** Check if a given object implements the DatasourceFieldsInner interface. */
export function instanceOfDatasourceFieldsInner(
  value: object
): value is DatasourceFieldsInner {
  return true;
}

export function DatasourceFieldsInnerFromJSON(
  json: any
): DatasourceFieldsInner {
  return DatasourceFieldsInnerFromJSONTyped(json, false);
}

export function DatasourceFieldsInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DatasourceFieldsInner {
  if (json == null) {
    return json;
  }
  return {
    name: json['name'] == null ? undefined : json['name'],
    type: json['type'] == null ? undefined : json['type'],
    label: json['label'] == null ? undefined : json['label']
  };
}

export function DatasourceFieldsInnerToJSON(json: any): DatasourceFieldsInner {
  return DatasourceFieldsInnerToJSONTyped(json, false);
}

export function DatasourceFieldsInnerToJSONTyped(
  value?: DatasourceFieldsInner | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value['name'],
    type: value['type'],
    label: value['label']
  };
}

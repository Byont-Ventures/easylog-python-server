/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Messages } from './Messages';
import {
    MessagesFromJSON,
    MessagesFromJSONTyped,
    MessagesToJSON,
    MessagesToJSONTyped,
} from './Messages';

/**
 * Represents a MessageContents record
 * @export
 * @interface MessageContents
 */
export interface MessageContents {
    /**
     * 
     * @type {string}
     * @memberof MessageContents
     */
    id: string;
    /**
     * 
     * @type {Messages}
     * @memberof MessageContents
     */
    message?: Messages | null;
    /**
     * 
     * @type {string}
     * @memberof MessageContents
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContents
     */
    contentType: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContents
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof MessageContents
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof MessageContents
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the MessageContents interface.
 */
export function instanceOfMessageContents(value: object): value is MessageContents {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('messageId' in value) || value['messageId'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function MessageContentsFromJSON(json: any): MessageContents {
    return MessageContentsFromJSONTyped(json, false);
}

export function MessageContentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContents {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'message': json['message'] == null ? undefined : MessagesFromJSON(json['message']),
        'messageId': json['message_id'],
        'contentType': json['content_type'],
        'content': json['content'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function MessageContentsToJSON(json: any): MessageContents {
    return MessageContentsToJSONTyped(json, false);
}

export function MessageContentsToJSONTyped(value?: MessageContents | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'message': MessagesToJSON(value['message']),
        'message_id': value['messageId'],
        'content_type': value['contentType'],
        'content': value['content'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}


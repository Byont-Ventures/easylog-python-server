/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Threads } from './Threads';
import {
    ThreadsFromJSON,
    ThreadsFromJSONTyped,
    ThreadsToJSON,
    ThreadsToJSONTyped,
} from './Threads';

/**
 * 
 * @export
 * @interface PaginationThreads
 */
export interface PaginationThreads {
    /**
     * 
     * @type {Array<Threads>}
     * @memberof PaginationThreads
     */
    data: Array<Threads>;
    /**
     * 
     * @type {number}
     * @memberof PaginationThreads
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationThreads
     */
    offset: number;
}

/**
 * Check if a given object implements the PaginationThreads interface.
 */
export function instanceOfPaginationThreads(value: object): value is PaginationThreads {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('offset' in value) || value['offset'] === undefined) return false;
    return true;
}

export function PaginationThreadsFromJSON(json: any): PaginationThreads {
    return PaginationThreadsFromJSONTyped(json, false);
}

export function PaginationThreadsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginationThreads {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(ThreadsFromJSON)),
        'limit': json['limit'],
        'offset': json['offset'],
    };
}

export function PaginationThreadsToJSON(json: any): PaginationThreads {
    return PaginationThreadsToJSONTyped(json, false);
}

export function PaginationThreadsToJSONTyped(value?: PaginationThreads | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(ThreadsToJSON)),
        'limit': value['limit'],
        'offset': value['offset'],
    };
}

